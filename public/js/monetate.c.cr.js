monetate.c.cr({"data": "(function () {\n    if (!window.impressionTrack) {\n        /*Impression Tracking, such as used by Monetate to track CC ad impressions*/\n        window.impressionTrack = function (a) {\n            /*check for \"s\" object, if not found then put on timer*/\n            var id = setInterval(frame, 10);\n\n            function frame() {\n                if (typeof s !== \"undefined\") {\n                    sendImpressionTrack(a);\n                    clearInterval(id);\n                }\n            }\n        };\n        window.sendImpressionTrack = function (a) {\n            //build evar1 string\n            var tempArray = \"\";\n            var variableArray = [];\n            var linkTrackVars = \"\";\n            var linkTrackEvents = \"\";\n            var events = \"\";\n            var mtLoginStatus = \"\";\n            /*cycle through events, evars, props*/\n            if (typeof a != \"undefined\") {\n                /*check capitalization of event, eVar, prop*/\n                if ( dataLayer.mr_prof_authentication_state == \"authenticated\" ) {\n                    mtLoginStatus = \"|evar22=logged in\";\n                } else if ( dataLayer.mr_prof_authentication_state == \"remembered\" ) {\n                    mtLoginStatus = \"|evar22=remembered\";\n                }\n                a = a + mtLoginStatus;\n                var regexE = /event/i;\n                var regexV = /evar/i;\n                var regexP = /prop/i;\n                tempArray = a.split(\"|\");\n                tempArray.forEach(function (value) {\n                    /*test which variable type*/\n                    var varType = \"\";\n                    if (/event/i.test(value) == true) {\n                        varType = \"event\";\n                    } else if (/evar/i.test(value) == true) {\n                        varType = \"eVar\";\n                    } else if (/prop/i.test(value) == true) {\n                        varType = \"prop\";\n                    }\n                    switch (varType) {\n                        case \"event\":\n                            var eventVal = value.replace(regexE, \"event\");\n                            events = s.apl(events, eventVal, \",\", 2);\n                            /*grab only the event name in case there is an incrementor also passed*/\n                            var eventName = value.split(\"=\");\n                            linkTrackVars = s.apl(linkTrackVars, \"events\", \",\", 2);\n                            linkTrackEvents = s.apl(linkTrackEvents, eventName[0], \",\", 2);\n                            break;\n                        case \"eVar\":\n                            /*split the evar and value*/\n                            var varName = value.split(\"=\");\n                            linkTrackVars = s.apl(linkTrackVars, varName[0].replace(regexV, \"eVar\"), \",\", 2);\n                            s[varName[0].replace(regexV, \"eVar\")] = varName[1];\n                            variableArray.push(varName[0].replace(regexV, \"eVar\"));\n                            break;\n                        case \"prop\":\n                            /*split the prop and value*/\n                            var propName = value.split(\"=\");\n                            linkTrackVars = s.apl(linkTrackVars, propName[0].replace(regexP, \"prop\"), \",\", 2);\n                            s[propName[0].replace(regexP, \"prop\")] = propName[1];\n                            variableArray.push(propName[0].replace(regexP, \"prop\"));\n                            break;\n                        default:\n                            // add nothing\n                    }\n                });\n            }\n            if (typeof visitor !== \"undefined\") {\n                s.marketingCloudVisitorID = visitor.getMarketingCloudVisitorID();\n            }\n            s.origLTV = s.linkTrackVars;\n            s.origEvents = s.events;\n            s.events = events;\n            s.linkTrackVars = linkTrackVars;\n            s.linkTrackEvents = linkTrackEvents;\n            s.tl(this, \"o\", \"Impression View\");\n            /*clear impression specific variables*/\n            variableArray.forEach(function (value) {\n                s[value] = \"\";\n            });\n            s.events = s.origEvents;\n            s.linkTrackEvents = \"None\";\n            s.linkTrackVars = s.origLTV;\n        };\n    } else {\n        console.log('impressionTrack Does Exist');\n    }\n})();", "ref": "611/2757967.js"});